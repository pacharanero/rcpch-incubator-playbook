{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"deployment/","text":"Deployment \u00b6 Microsoft Azure \u00b6 The RCPCH primarily uses Microsoft Azure's cloud platform, for reasons of established use. API Management \u00b6 The RCPCH Incubator has a self-hosted API management platform Gravitee.io which is deployed on a Kubernetes cluster within Azure and serves as a 'shop window' for RCPCH-developed APIs, documentation, and gateway access. Other platforms \u00b6 From time to time, we may utilise other deployment platforms for convenience or specific features - examples include Netlify, GitHub Pages, and Heroku.","title":"Deployment"},{"location":"deployment/#deployment","text":"","title":"Deployment"},{"location":"deployment/#microsoft-azure","text":"The RCPCH primarily uses Microsoft Azure's cloud platform, for reasons of established use.","title":"Microsoft Azure"},{"location":"deployment/#api-management","text":"The RCPCH Incubator has a self-hosted API management platform Gravitee.io which is deployed on a Kubernetes cluster within Azure and serves as a 'shop window' for RCPCH-developed APIs, documentation, and gateway access.","title":"API Management"},{"location":"deployment/#other-platforms","text":"From time to time, we may utilise other deployment platforms for convenience or specific features - examples include Netlify, GitHub Pages, and Heroku.","title":"Other platforms"},{"location":"domain-names/","text":"Domain Names \u00b6 rcpch.ac.uk (PRIMARY) \u00b6 This domain is the main RCPCH domain and should be used for official, live projects, where users need assurance that they are dealing with official RCPCH services and information. All business-critical services must be on this domain and must have SSL enforced . HOWTO For security reasons, control of this domain is with the senior IT team at RCPCH. rcpch.tech (SECONDARY) \u00b6 This domain is for Incubator experimental work, development and test sites. We have slightly less restrictive control over this domain since nothing on this domain is business critical . HOWTO You can ask to have permissions applied to your Azure account such that you can make changes to these DNS settings. rcpch.dev \u00b6 This domain is for RCPCH Incubator specific pages. HOWTO You can ask to have permissions applied to your Azure account such that you can make changes to these DNS settings.","title":"Domain Names"},{"location":"domain-names/#domain-names","text":"","title":"Domain Names"},{"location":"domain-names/#rcpchacuk-primary","text":"This domain is the main RCPCH domain and should be used for official, live projects, where users need assurance that they are dealing with official RCPCH services and information. All business-critical services must be on this domain and must have SSL enforced . HOWTO For security reasons, control of this domain is with the senior IT team at RCPCH.","title":"rcpch.ac.uk (PRIMARY)"},{"location":"domain-names/#rcpchtech-secondary","text":"This domain is for Incubator experimental work, development and test sites. We have slightly less restrictive control over this domain since nothing on this domain is business critical . HOWTO You can ask to have permissions applied to your Azure account such that you can make changes to these DNS settings.","title":"rcpch.tech (SECONDARY)"},{"location":"domain-names/#rcpchdev","text":"This domain is for RCPCH Incubator specific pages. HOWTO You can ask to have permissions applied to your Azure account such that you can make changes to these DNS settings.","title":"rcpch.dev"},{"location":"general-principles/","text":"General Principles \u00b6 Some of these principles are taken directly from existing guidance on the practice of medicine. Because medical software is part of medicine. First, do no harm Don't get into holy wars Loose consensus and running code is better than neverending committees and no code. Experiments in code are better than lengthy debate. It's OK to throw away an experiment once it's proven one way or another. Choose options that are well supported in the wider tech world. Adopt the best practices of the wider tech world. If there is no clear advantage to one or other option, choose the option that leaves us the widest range of options in the future.","title":"General Principles"},{"location":"general-principles/#general-principles","text":"Some of these principles are taken directly from existing guidance on the practice of medicine. Because medical software is part of medicine. First, do no harm Don't get into holy wars Loose consensus and running code is better than neverending committees and no code. Experiments in code are better than lengthy debate. It's OK to throw away an experiment once it's proven one way or another. Choose options that are well supported in the wider tech world. Adopt the best practices of the wider tech world. If there is no clear advantage to one or other option, choose the option that leaves us the widest range of options in the future.","title":"General Principles"},{"location":"open-source/","text":"Open Source \u00b6 The RCPCH Incubator believes in open source software being significantly safer, more secure, and more scientific than proprietary or closed source models, especially in the field of child health and for international development. What is open source? \u00b6 Open source software simply means that the source code of the software is published openly. Nothing more and nothing less. Various different variants of this primary feature exist, and they are described in the open source license. Open source software is still copyrighted in the same way as closed source, the RCPCH still owns the copyright on the software and will defend this if necessary. Why does the RCPCH believe so strongly in open source? \u00b6 We accept that open source development is not yet mainstream in the healthcare tech sector. However for several reasons we have chosen to lead the way in open source healthcare. Open source software is comparable to the open academic publication of medical knowledge. We wouldn't trust any other medical intervention if there was no open publication of the science around its use, and software should be no different. As medical software evolves from basic admin and reporting clinical systems of the past into more active clinical digital tools, the trust imbued by open source becomes vastly more important. RCPCH is a charity and has a particular focus on international development and improvements in global child health. We fimly believe that making all source code open ensures the widest possible use of the improvements made by the RCPCH, and ensures that no Trends in wider tech sector - Microsoft (acquiring GitHub), Google (Golang, Kubernetes) and examples of open source from Facebook (GraphQL, ReactJS), and Netflix (Chaos Monkey) Does open source preclude a sustainable commercial model around a piece of software? \u00b6 No, not at all. Open source software is the only ethical way to develop healthcare software, but this does not preclude the RCPCH developing non-exploitative business models around the software Common open source fallacies \u00b6 \"Hackers can access the source code which makes it easier to hack our systems\" \u00b6 This is false. Hackers may or may not have access to source code of proprietary software, which is frequently leaked online following cybersecurity breaches of even huge multinational companies. Relying on obscurity within your source code rather than inherently secure practices is poor practice. Conclusion open source is no less secure than proprietary software. In fact, knowing that your would-be attacker definitely does have access to source code helps to drive higher standards of security practice right from the start of any project. \"Open source software is anti-commercial\" \u00b6 Open source software is possible to be commercialised in many of the same ways as proprietary software. There are many examples in the wider tech world of successful businesses releasing open source code - Wordpress.org, Discourse.org, and of course Red Hat and Canonical. In a modern digital healthcare setting, most organisations do not want to self-host software that they can get as a secure, reliable managed service. The most attractive ways to commercialise software in healthcare are provision of services around the code - hosting, development, integration, and Software As A Service (SaaS) offerings, and all of these are absolutely possible with open source. \"The source code is an intangible asset which our finance director has valued at $Xmillion\" \u00b6 This is simply creative accounting intended to drive up the net worth of an organisation on paper. It is not related to any measure of value of the code. The most effective way to realise return on investment for software is to provide robust, trusted services around a secure code base.","title":"Open Source"},{"location":"open-source/#open-source","text":"The RCPCH Incubator believes in open source software being significantly safer, more secure, and more scientific than proprietary or closed source models, especially in the field of child health and for international development.","title":"Open Source"},{"location":"open-source/#what-is-open-source","text":"Open source software simply means that the source code of the software is published openly. Nothing more and nothing less. Various different variants of this primary feature exist, and they are described in the open source license. Open source software is still copyrighted in the same way as closed source, the RCPCH still owns the copyright on the software and will defend this if necessary.","title":"What is open source?"},{"location":"open-source/#why-does-the-rcpch-believe-so-strongly-in-open-source","text":"We accept that open source development is not yet mainstream in the healthcare tech sector. However for several reasons we have chosen to lead the way in open source healthcare. Open source software is comparable to the open academic publication of medical knowledge. We wouldn't trust any other medical intervention if there was no open publication of the science around its use, and software should be no different. As medical software evolves from basic admin and reporting clinical systems of the past into more active clinical digital tools, the trust imbued by open source becomes vastly more important. RCPCH is a charity and has a particular focus on international development and improvements in global child health. We fimly believe that making all source code open ensures the widest possible use of the improvements made by the RCPCH, and ensures that no Trends in wider tech sector - Microsoft (acquiring GitHub), Google (Golang, Kubernetes) and examples of open source from Facebook (GraphQL, ReactJS), and Netflix (Chaos Monkey)","title":"Why does the RCPCH believe so strongly in open source?"},{"location":"open-source/#does-open-source-preclude-a-sustainable-commercial-model-around-a-piece-of-software","text":"No, not at all. Open source software is the only ethical way to develop healthcare software, but this does not preclude the RCPCH developing non-exploitative business models around the software","title":"Does open source preclude a sustainable commercial model around a piece of software?"},{"location":"open-source/#common-open-source-fallacies","text":"","title":"Common open source fallacies"},{"location":"open-source/#hackers-can-access-the-source-code-which-makes-it-easier-to-hack-our-systems","text":"This is false. Hackers may or may not have access to source code of proprietary software, which is frequently leaked online following cybersecurity breaches of even huge multinational companies. Relying on obscurity within your source code rather than inherently secure practices is poor practice. Conclusion open source is no less secure than proprietary software. In fact, knowing that your would-be attacker definitely does have access to source code helps to drive higher standards of security practice right from the start of any project.","title":"\"Hackers can access the source code which makes it easier to hack our systems\""},{"location":"open-source/#open-source-software-is-anti-commercial","text":"Open source software is possible to be commercialised in many of the same ways as proprietary software. There are many examples in the wider tech world of successful businesses releasing open source code - Wordpress.org, Discourse.org, and of course Red Hat and Canonical. In a modern digital healthcare setting, most organisations do not want to self-host software that they can get as a secure, reliable managed service. The most attractive ways to commercialise software in healthcare are provision of services around the code - hosting, development, integration, and Software As A Service (SaaS) offerings, and all of these are absolutely possible with open source.","title":"\"Open source software is anti-commercial\""},{"location":"open-source/#the-source-code-is-an-intangible-asset-which-our-finance-director-has-valued-at-xmillion","text":"This is simply creative accounting intended to drive up the net worth of an organisation on paper. It is not related to any measure of value of the code. The most effective way to realise return on investment for software is to provide robust, trusted services around a secure code base.","title":"\"The source code is an intangible asset which our finance director has valued at $Xmillion\""},{"location":"security/","text":"Security practices \u00b6 Two-factor Authentication for all logins GitHub Azure Secure automated deployment pipelines SSH key access GPG signed commits HTTPS everywhere","title":"Security practices"},{"location":"security/#security-practices","text":"Two-factor Authentication for all logins GitHub Azure Secure automated deployment pipelines SSH key access GPG signed commits HTTPS everywhere","title":"Security practices"},{"location":"python/dependency-management/","text":"We like to use Python standard methods for managing dependencies In order to separate the potentially conflicting dependencies of multiple Python projects, we use Pyenv . Another alternative approach is to encapsulate the entire app in a Docker container which contains all the OS and Python dependencies for the entire app. This can massively simplify development environments. See the example in the RCPCH Audit Engine to see how this works in practice, reducing what would be a number of potentially-confusing devenv setup steps to docker compose up . Of course this also means our dev env can be made identical to the deployment env, instead of having every developer working on a hand-knitted, variable development environment. (The only downside is sometimes you forget your server is inside the Docker container and run commands outside the container and then puzzle over why it's not working!) Pyenv tips \u00b6 Installing a new Python version pyenv install [ PYTHON_VERSION ] Set up a new pyenv virtualenv with pyenv virtualenv [ PYTHON_VERSION ] [ ARBITRARY_VIRTUALENV_NAME ] A neat feature to register your current pyenv virtualenv as the default one to use when you navigate to that directory In the root of the project, execute pyenv local [ NAME_OF_VIRTUALENV ] This will create a .python-version file in the current directory, and thereafter the correct pyenv virtualenv will be autoselected. Docker and docker compose tips \u00b6 Since a recent version update in Docker, it's docker compose (with a space not a hyphen) - for a good while it used to be docker-compose and this sometimes still catches me out as I was a fan of using Docker and compose, ages ago so I remember the old syntax. But some even quite recent tutorials will have this wrong. To run a command in the context of a docker compose suite of containers, you use the following form docker compose exec [ CONTAINER_NAME ] [ COMMAND ] example docker compose exec web python manage.py runserver","title":"Dependency management"},{"location":"python/dependency-management/#pyenv-tips","text":"Installing a new Python version pyenv install [ PYTHON_VERSION ] Set up a new pyenv virtualenv with pyenv virtualenv [ PYTHON_VERSION ] [ ARBITRARY_VIRTUALENV_NAME ] A neat feature to register your current pyenv virtualenv as the default one to use when you navigate to that directory In the root of the project, execute pyenv local [ NAME_OF_VIRTUALENV ] This will create a .python-version file in the current directory, and thereafter the correct pyenv virtualenv will be autoselected.","title":"Pyenv tips"},{"location":"python/dependency-management/#docker-and-docker-compose-tips","text":"Since a recent version update in Docker, it's docker compose (with a space not a hyphen) - for a good while it used to be docker-compose and this sometimes still catches me out as I was a fan of using Docker and compose, ages ago so I remember the old syntax. But some even quite recent tutorials will have this wrong. To run a command in the context of a docker compose suite of containers, you use the following form docker compose exec [ CONTAINER_NAME ] [ COMMAND ] example docker compose exec web python manage.py runserver","title":"Docker and docker compose tips"},{"location":"python/requirements/","text":"pip and requirements files/folders \u00b6 We've found pip to be a good package manager and this is what we use at RCPCH Incubator. For most of our larger projects, we also create a folder structure like this requirements.txt requirements/ \u251c\u2500\u2500 common-requirements.txt \u251c\u2500\u2500 development-requirements.txt \u2514\u2500\u2500 live-requirements.txt The `requirements.txt in the root of the project is the one that is run by CI and autodeploy tools requirements.txt - r requirements / live - requirements . txt It contains an instruction to run the live-requirements.txt file Both live-requirements.txt and development-requirements.txt will also call common-requirements.txt development-requirements.txt # load common requirements - r common - requirements . txt # standard imports ... # third party imports ... # RCPCH imports ... This arrangement allows to have separation between the dependencies that are running in live and those that are needed for development.","title":"Requirements"},{"location":"python/requirements/#pip-and-requirements-filesfolders","text":"We've found pip to be a good package manager and this is what we use at RCPCH Incubator. For most of our larger projects, we also create a folder structure like this requirements.txt requirements/ \u251c\u2500\u2500 common-requirements.txt \u251c\u2500\u2500 development-requirements.txt \u2514\u2500\u2500 live-requirements.txt The `requirements.txt in the root of the project is the one that is run by CI and autodeploy tools requirements.txt - r requirements / live - requirements . txt It contains an instruction to run the live-requirements.txt file Both live-requirements.txt and development-requirements.txt will also call common-requirements.txt development-requirements.txt # load common requirements - r common - requirements . txt # standard imports ... # third party imports ... # RCPCH imports ... This arrangement allows to have separation between the dependencies that are running in live and those that are needed for development.","title":"pip and requirements files/folders"},{"location":"python/tidy_imports/","text":"Trying to keep your external dependencies as lean as possible is always important. We like to separate out the imports at the top of the file, going a little further than the Python style guide, which just says that standard library imports should go first. We list imports like this example imports section # standard imports import os # third party imports from django.http import HttpResponse # RCPCH imports from epilepsy12.constants.user_types import CAN_ALLOCATE_GENERAL_PAEDIATRIC_CENTRE , CAN_ALLOCATE_TERTIARY_NEUROLOGY_CENTRE This allows us to see at a glance what is relatively 'highly trusted' code (PSF-maintained, standard library stuff) and then what is third-party code, which arguably the biggest source of potential security, maintenance and other issues. Doing this makes us think about where the code came from. Our RCPCH imports code is clearly identifiable and this is the stuff we should be testing in detail. But at least we have 100% control over it!","title":"Tidy imports"}]}